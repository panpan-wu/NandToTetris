// PUSH ARGUMENT 1
@1
D=A
@ARG
D=D+M
@addr
M=D
@addr
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// POP POINTER 1
@SP
M=M-1
@SP
A=M
D=M
@THAT
M=D
// PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// POP THAT 0
@0
D=A
@THAT
D=D+M
@addr
M=D
@SP
M=M-1
@SP
A=M
D=M
@addr
A=M
M=D
// PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// POP THAT 1
@1
D=A
@THAT
D=D+M
@addr
M=D
@SP
M=M-1
@SP
A=M
D=M
@addr
A=M
M=D
// PUSH ARGUMENT 0
@0
D=A
@ARG
D=D+M
@addr
M=D
@addr
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// SUB
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// POP ARGUMENT 0
@0
D=A
@ARG
D=D+M
@addr
M=D
@SP
M=M-1
@SP
A=M
D=M
@addr
A=M
M=D
(MAIN_LOOP_START)
// PUSH ARGUMENT 0
@0
D=A
@ARG
D=D+M
@addr
M=D
@addr
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// IF-GOTO COMPUTE_ELEMENT
@SP
M=M-1
A=M
D=M
@COMPUTE_ELEMENT
D;JNE
// GOTO END_PROGRAM
@END_PROGRAM
0;JMP
(COMPUTE_ELEMENT)
// PUSH THAT 0
@0
D=A
@THAT
D=D+M
@addr
M=D
@addr
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// PUSH THAT 1
@1
D=A
@THAT
D=D+M
@addr
M=D
@addr
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// ADD
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// POP THAT 2
@2
D=A
@THAT
D=D+M
@addr
M=D
@SP
M=M-1
@SP
A=M
D=M
@addr
A=M
M=D
// PUSH POINTER 1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
// PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// ADD
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// POP POINTER 1
@SP
M=M-1
@SP
A=M
D=M
@THAT
M=D
// PUSH ARGUMENT 0
@0
D=A
@ARG
D=D+M
@addr
M=D
@addr
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// SUB
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// POP ARGUMENT 0
@0
D=A
@ARG
D=D+M
@addr
M=D
@SP
M=M-1
@SP
A=M
D=M
@addr
A=M
M=D
// GOTO MAIN_LOOP_START
@MAIN_LOOP_START
0;JMP
(END_PROGRAM)
