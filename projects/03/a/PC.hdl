// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // Solution 1
    // Mux16(a=in, b=mux1out, sel=sel0, out=mux0out);
    // Register(in=mux0out, load=load0, out=out, out=registerout);
    // Inc16(in=registerout, out=incout);
    // Mux16(a=incout, b=false, sel=reset, out=mux1out);
    // Not(in=load, out=notload);
    // Or(a=reset, b=load, out=or0out);
    // Or(a=or0out, b=inc, out=load0);
    // And(a=notload, b=inc, out=and0out);
    // Or(a=and0out, b=reset, out=sel0);

    // Solution 2
    Inc16(in=t0, out=t1);
    Mux16(a=t0, b=t1, sel=inc, out=t2);
    Mux16(a=t2, b=in, sel=load, out=t3);
    Mux16(a=t3, b=false, sel=reset, out=t4);
    Register(in=t4, load=true, out=t0, out=out);
}
